#!/usr/bin/env zsh
# Worktree Tools Configuration Example
# Copy this file to ~/.config/worktree-tools/config.zsh and customize for your setup

# =============================================================================
# GIT WORKTREE CONFIGURATION
# =============================================================================

# Your git username and branch prefix
GIT_USERNAME="your-username"
BRANCH_PREFIX="your-username"

# Base paths for your development setup
BASE_DEV_PATH="$HOME/company/mobile"
BARE_REPOS_PATH="$BASE_DEV_PATH/.repos"
WORKTREES_PATH="$BASE_DEV_PATH/worktrees"
WORKTREE_TEMPLATES_PATH="$BASE_DEV_PATH/worktree_templates"

# Repository shorthand mappings
# Format: shorthand => full-repo-name
# Note: REPO_MAPPINGS declaration is handled by git-worktree-helper.zsh
[[ -z ${(t)REPO_MAPPINGS} ]] && declare -gA REPO_MAPPINGS
REPO_MAPPINGS[acmd]="Company-Android"
REPO_MAPPINGS[alib]="Company-Android-Library"
REPO_MAPPINGS[icmd]="Company-iOS"
REPO_MAPPINGS[ilib]="Company-iOS-Library"

# =============================================================================
# CI HELPER CONFIGURATION
# =============================================================================

# Define your repositories and their CI commands
# Format: REPO_NAME => "build_cmd|test_cmd|lint_cmd"
# Note: REPO_CONFIGS declaration is handled by ci-helper.zsh
REPO_CONFIGS[Company-Android]="./gradlew --quiet assembleDebug|./gradlew --quiet testDebugUnitTest validateDebugScreenshotTest|./gradlew --quiet lintDebug detekt"
REPO_CONFIGS[Company-Android-Library]="./gradlew --quiet assembleDebug|./gradlew --quiet testDebugUnitTest validateDebugScreenshotTest|./gradlew --quiet lintDebug detekt"
REPO_CONFIGS[Company-iOS]="bundle exec fastlane build|bundle exec fastlane unit_tests|swiftlint --strict --reporter github-actions-logging && swiftformat . --lint --strict --reporter github-actions-log"
REPO_CONFIGS[Company-iOS-Library]="bundle exec fastlane build|bundle exec fastlane unit_tests_ios|swiftlint --strict --reporter github-actions-logging && swiftformat . --lint --strict --reporter github-actions-log"
REPO_CONFIGS[Company-Web]="npm run build|npm test|npm run lint"

# Define modular components (optional)  
# Format: REPO_NAME => "module1 module2"
# Note: REPO_MODULES declaration is handled by ci-helper.zsh
REPO_MODULES[Company-Android]="module-core module-outputs"
REPO_MODULES[Company-Android-Library]="module-shared module-models"

# =============================================================================
# IDE CONFIGURATION
# =============================================================================

# Define IDE-specific configurations for repositories
# Format: REPO_NAME => "ide_type|workspace_path|fallback_command"
# ide_type: android-studio, xcode-workspace, xcode-package, vscode, default
# workspace_path: specific path pattern (relative to git root)
# fallback_command: optional fallback if workspace not found
# Note: REPO_IDE_CONFIGS declaration is handled by ci-helper.zsh
REPO_IDE_CONFIGS[Company-Android]="android-studio||"
REPO_IDE_CONFIGS[Company-Android-Library]="android-studio||"
REPO_IDE_CONFIGS[Company-iOS]="xcode-workspace|Company-iOS.xcworkspace|"
REPO_IDE_CONFIGS[Company-iOS-Library]="xcode-package|.swiftpm/xcode/package.xcworkspace|swift package generate-xcodeproj"
REPO_IDE_CONFIGS[Company-Web]="vscode||"